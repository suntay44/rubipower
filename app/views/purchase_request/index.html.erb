<!-- Main Content -->
    <!-- Top Navigation -->
    <header class="bg-white shadow-sm border-b border-gray-200">
      <div class="flex items-center justify-between px-6 py-4">
        <div class="flex items-center space-x-4">
          <button id="mobile-sidebar-toggle" class="text-gray-500 hover:text-gray-700 lg:hidden">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
          <div class="flex items-center space-x-3">
            <a href="<%= purchase_request_path %>" class="text-gray-500 hover:text-gray-700">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
            </a>
            <h1 class="text-2xl font-bold text-gray-900">Purchase Requests</h1>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <!-- Create Purchase Request Button -->
          <a href="<%= new_purchase_request_path %>" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md font-medium transition-colors flex items-center space-x-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            <span>Create Purchase Request</span>
          </a>
          
          <!-- User Profile -->
          <div class="flex items-center space-x-3">
            <div class="w-8 h-8 bg-red-600 rounded-full flex items-center justify-center">
              <span class="text-white font-semibold text-sm">A</span>
            </div>
            <div class="hidden md:block">
              <p class="text-sm font-medium text-gray-900">Admin User</p>
              <p class="text-xs text-gray-500">admin@example.com</p>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content Area -->
    <main class="flex-1 overflow-y-auto bg-gray-50 p-6">
      <div class="max-w-7xl mx-auto">
        <!-- Header Section -->
        <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
          <div class="flex items-center justify-between">
            <div>
              <h2 class="text-2xl font-bold text-gray-900 mb-2">Purchase Requests</h2>
              <p class="text-gray-600">Manage and track all purchase requests in the system</p>
            </div>
          </div>
        </div>
        
        <!-- Purchase Requests Table -->
        <div class="bg-white rounded-lg shadow-sm overflow-visible">
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Request ID
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Requester
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Department
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Estimated Cost
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Created Date
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% @purchase_requests.each do |request| %>
                  <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                      #<%= request[:id] %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <%= request[:requester] %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <%= request[:department] %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      â‚±<%= number_with_delimiter(request[:estimated_cost]) %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <%= request[:created_at] %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div class="flex items-center space-x-2">
                        <!-- View Button -->
                        <%= link_to purchase_request_detail_path(request[:id]), class: "text-blue-600 hover:text-blue-900 transition-colors" do %>
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                          </svg>
                        <% end %>
                        
                        <!-- Actions Dropdown -->
                        <div class="relative inline-block">
                          <button id="actions-<%= request[:id] %>" class="text-gray-600 hover:text-gray-900 transition-colors disabled:opacity-50 disabled:cursor-not-allowed p-1 rounded-md hover:bg-gray-100" 
                                  <%= 'disabled' unless current_user&.admin? %>>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                            </svg>
                          </button>
                          
                          <!-- Dropdown Menu -->
                          <div id="dropdown-<%= request[:id] %>" class="hidden fixed w-48 bg-white rounded-lg shadow-xl z-[9999] border border-gray-200 overflow-hidden" style="top: auto; left: auto;">
                            <div class="py-1">
                              <button onclick="approveRequest(<%= request[:id] %>)" class="flex items-center w-full text-left px-4 py-2 text-sm text-green-600 hover:bg-green-50 transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                Approve
                              </button>
                              <button onclick="rejectRequest(<%= request[:id] %>)" class="flex items-center w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                                Reject
                              </button>
                              <button onclick="editRequest(<%= request[:id] %>)" class="flex items-center w-full text-left px-4 py-2 text-sm text-gray-600 hover:bg-gray-50 transition-colors">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                                Edit
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
          
          <!-- Pagination -->
          <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div class="flex-1 flex justify-between sm:hidden">
              <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Previous
              </a>
              <a href="#" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                Next
              </a>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
              <div>
                <p class="text-sm text-gray-700">
                  Showing <span class="font-medium">1</span> to <span class="font-medium"><%= @purchase_requests.length %></span> of <span class="font-medium"><%= @purchase_requests.length %></span> results
                </p>
              </div>
              <div>
                <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                  <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Previous</span>
                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                  </a>
                  <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                    1
                  </a>
                  <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                    <span class="sr-only">Next</span>
                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                    </svg>
                  </a>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const filterButtons = {
    all: document.getElementById('filter-all'),
    pending: document.getElementById('filter-pending'),
    approved: document.getElementById('filter-approved'),
    rejected: document.getElementById('filter-rejected')
  };

  const tableRows = document.querySelectorAll('tbody tr');

  function updateButtonStyles(activeFilter) {
    // Reset all buttons to inactive style
    Object.values(filterButtons).forEach(button => {
      button.className = 'px-3 py-1 text-sm font-medium rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors';
    });
    
    // Set active button style
    filterButtons[activeFilter].className = 'px-3 py-1 text-sm font-medium rounded-md bg-red-600 text-white hover:bg-red-700 transition-colors';
  }

  function filterTable(status) {
    tableRows.forEach(row => {
      const statusCell = row.querySelector('td:nth-child(5)'); // Status is now the 5th column (after removing Items)
      const statusText = statusCell.textContent.trim();
      
      if (status === 'all') {
        row.style.display = '';
      } else if (statusText.toLowerCase() === status.toLowerCase()) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }

  // Add click event listeners to filter buttons
  filterButtons.all.addEventListener('click', () => {
    updateButtonStyles('all');
    filterTable('all');
  });

  filterButtons.pending.addEventListener('click', () => {
    updateButtonStyles('pending');
    filterTable('pending');
  });

  filterButtons.approved.addEventListener('click', () => {
    updateButtonStyles('approved');
    filterTable('approved');
  });

  filterButtons.rejected.addEventListener('click', () => {
    updateButtonStyles('rejected');
    filterTable('rejected');
  });

  // Dropdown functionality
  document.addEventListener('click', function(event) {
    // Close all dropdowns when clicking outside
    if (!event.target.closest('.relative')) {
      document.querySelectorAll('[id^="dropdown-"]').forEach(dropdown => {
        dropdown.classList.add('hidden');
      });
    }
  });

  // Add click listeners to action buttons
  document.querySelectorAll('[id^="actions-"]').forEach(button => {
    button.addEventListener('click', function(event) {
      event.stopPropagation();
      const requestId = this.id.replace('actions-', '');
      const dropdown = document.getElementById(`dropdown-${requestId}`);
      
      // Close all other dropdowns
      document.querySelectorAll('[id^="dropdown-"]').forEach(d => {
        if (d !== dropdown) {
          d.classList.add('hidden');
        }
      });
      
      // Toggle current dropdown
      if (dropdown.classList.contains('hidden')) {
        // Position the dropdown relative to the button
        const buttonRect = this.getBoundingClientRect();
        dropdown.style.top = (buttonRect.bottom + 4) + 'px';
        dropdown.style.left = (buttonRect.right - 192) + 'px'; // 192px = w-48 (12rem)
        dropdown.classList.remove('hidden');
      } else {
        dropdown.classList.add('hidden');
      }
    });
  });
});

// Action functions
function approveRequest(requestId) {
  if (confirm('Are you sure you want to approve this request?')) {
    // In real app, this would make an API call
    console.log('Approving request:', requestId);
    alert('Request approved successfully!');
    // Close dropdown
    document.getElementById(`dropdown-${requestId}`).classList.add('hidden');
    // Refresh page or update status
    location.reload();
  }
}

function rejectRequest(requestId) {
  if (confirm('Are you sure you want to reject this request?')) {
    // In real app, this would make an API call
    console.log('Rejecting request:', requestId);
    alert('Request rejected successfully!');
    // Close dropdown
    document.getElementById(`dropdown-${requestId}`).classList.add('hidden');
    // Refresh page or update status
    location.reload();
  }
}

function editRequest(requestId) {
  // In real app, this would redirect to edit page or open edit modal
  console.log('Editing request:', requestId);
  alert('Edit functionality would be implemented here');
  // Close dropdown
  document.getElementById(`dropdown-${requestId}`).classList.add('hidden');
}
</script>
