<header class="bg-white shadow-sm border-b border-gray-200">
  <div class="flex items-center justify-between px-6 py-4">
    <div class="flex items-center space-x-4">
      <a href="<%= employee_reimbursement_path(@employee_reimbursement) %>" class="text-gray-500 hover:text-gray-700">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </a>
      <div class="flex items-center space-x-3">
        <h1 class="text-2xl font-bold text-gray-900">Edit Employee Reimbursement</h1>
      </div>
    </div>
  </div>
</header>

<main class="flex-1 overflow-y-auto">
  <div class="p-6">
    <%= form_with model: @employee_reimbursement, local: true, class: "space-y-8" do |form| %>
      <!-- Employee Information -->
      <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-semibold text-gray-900">Employee Information</h2>
        </div>
        <div class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <%= form.label :employee_name, "Employee Name *", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.select :employee_name, options_from_collection_for_select(@users, :full_name, :full_name, @employee_reimbursement.employee_name), { prompt: "Select Employee" }, { required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500", onchange: "updateEmployeeId(this)" } %>
            </div>
            <div>
              <%= form.label :employee_id, "Employee ID", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <div id="employee-id-display" class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm text-gray-700">
                <%= @employee_reimbursement.employee_id.present? ? @employee_reimbursement.employee_id.rjust(5, '0') : "Select employee first" %>
              </div>
              <%= form.hidden_field :employee_id %>
            </div>
            <div>
              <%= form.label :expense_type, "Expense Type *", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.select :expense_type, options_for_select([
                ['Travel', 'travel'],
                ['Meals & Entertainment', 'meals_entertainment'],
                ['Office Supplies', 'office_supplies'],
                ['Client Meeting Costs', 'client_meeting_costs']
              ], @employee_reimbursement.expense_type), { prompt: "Select Expense Type" }, { required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" } %>
            </div>
            <div>
              <%= form.label :amount_claimed, "Amount Claimed (₱) *", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.number_field :amount_claimed, step: 0.01, required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
            </div>
            <div>
              <%= form.label :expense_date, "Expense Date *", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.date_field :expense_date, required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
            </div>
            <div>
              <%= form.label :sales_order_number, "Sales Order Number *", class: "block text-sm font-medium text-gray-700 mb-2" %>
              <%= form.text_field :sales_order_number, required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
            </div>
          </div>
          
          <div>
            <%= form.label :expense_purpose, "Expense Purpose *", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= form.text_area :expense_purpose, required: true, rows: 3, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
          </div>
          
          <div>
            <%= form.label :client_name, "Client Name *", class: "block text-sm font-medium text-gray-700 mb-2" %>
            <%= form.text_field :client_name, required: true, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
          </div>
        </div>
      </div>

      <!-- Receipts -->
      <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-semibold text-gray-900">Receipts</h2>
        </div>
        <div class="p-6">
          <!-- Existing Receipts -->
          <% if @employee_reimbursement.receipts.attached? %>
            <div class="mb-4">
              <h3 class="text-sm font-medium text-gray-700 mb-2">Current Receipts:</h3>
              <div class="space-y-2">
                <% @employee_reimbursement.receipts.each do |receipt| %>
                  <div class="flex items-center justify-between p-2 bg-gray-50 rounded border">
                    <div class="flex items-center space-x-2">
                      <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                      <span class="text-sm text-gray-700"><%= receipt.filename %></span>
                      <span class="text-xs text-gray-500">(<%= number_to_human_size(receipt.byte_size) %>)</span>
                    </div>
                    <div class="flex space-x-2">
                      <a href="<%= rails_blob_path(receipt, disposition: "attachment") %>" class="text-xs text-blue-600 hover:text-blue-800">Download</a>
                      <button type="button" onclick="deleteReceipt(<%= receipt.blob_id %>)" class="text-xs text-red-600 hover:text-red-800">Delete</button>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>

          <!-- Add New Receipts -->
          <%= form.label :receipts, "Add New Receipts", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <p class="text-sm text-gray-500 mb-2">Upload receipt images or PDFs (PDF, JPG, PNG)</p>
          <%= form.file_field :receipts, multiple: true, accept: ".pdf,.jpg,.jpeg,.png", class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
          <div id="receipt-preview" class="mt-2 space-y-2"></div>
        </div>
      </div>

      <!-- Proof of Payment -->
      <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-semibold text-gray-900">Proof of Payment</h2>
        </div>
        <div class="p-6">
          <!-- Existing Proof of Payment -->
          <% if @employee_reimbursement.proof_of_payment.attached? %>
            <div class="mb-4">
              <h3 class="text-sm font-medium text-gray-700 mb-2">Current Proof of Payment:</h3>
              <div class="space-y-2">
                <% @employee_reimbursement.proof_of_payment.each do |proof| %>
                  <div class="flex items-center justify-between p-2 bg-gray-50 rounded border">
                    <div class="flex items-center space-x-2">
                      <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                      <span class="text-sm text-gray-700"><%= proof.filename %></span>
                      <span class="text-xs text-gray-500">(<%= number_to_human_size(proof.byte_size) %>)</span>
                    </div>
                    <div class="flex space-x-2">
                      <a href="<%= rails_blob_path(proof, disposition: "attachment") %>" class="text-xs text-blue-600 hover:text-blue-800">Download</a>
                      <button type="button" onclick="deleteProof(<%= proof.blob_id %>)" class="text-xs text-red-600 hover:text-red-800">Delete</button>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>

          <!-- Add New Proof of Payment -->
          <%= form.label :proof_of_payment, "Add New Proof of Payment", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <p class="text-sm text-gray-500 mb-2">Upload proof of payment documents (PDF, JPG, PNG)</p>
          <%= form.file_field :proof_of_payment, multiple: true, accept: ".pdf,.jpg,.jpeg,.png", class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
          <div id="proof-preview" class="mt-2 space-y-2"></div>
        </div>
      </div>

      <!-- Travel Itinerary -->
      <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
          <h2 class="text-lg font-semibold text-gray-900">Travel Itinerary</h2>
        </div>
        <div class="p-6">
          <!-- Existing Travel Itinerary -->
          <% if @employee_reimbursement.travel_itinerary.attached? %>
            <div class="mb-4">
              <h3 class="text-sm font-medium text-gray-700 mb-2">Current Travel Itinerary:</h3>
              <div class="space-y-2">
                <% @employee_reimbursement.travel_itinerary.each do |itinerary| %>
                  <div class="flex items-center justify-between p-2 bg-gray-50 rounded border">
                    <div class="flex items-center space-x-2">
                      <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                      <span class="text-sm text-gray-700"><%= itinerary.filename %></span>
                      <span class="text-xs text-gray-500">(<%= number_to_human_size(itinerary.byte_size) %>)</span>
                    </div>
                    <div class="flex space-x-2">
                      <a href="<%= rails_blob_path(itinerary, disposition: "attachment") %>" class="text-xs text-blue-600 hover:text-blue-800">Download</a>
                      <button type="button" onclick="deleteItinerary(<%= itinerary.blob_id %>)" class="text-xs text-red-600 hover:text-red-800">Delete</button>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>

          <!-- Add New Travel Itinerary -->
          <%= form.label :travel_itinerary, "Add New Travel Itinerary", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <p class="text-sm text-gray-500 mb-2">Upload travel itinerary documents (PDF, JPG, PNG)</p>
          <%= form.file_field :travel_itinerary, multiple: true, accept: ".pdf,.jpg,.jpeg,.png", class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500" %>
          <div id="itinerary-preview" class="mt-2 space-y-2"></div>
        </div>
      </div>

      <!-- Form Actions -->
      <div class="flex justify-end space-x-4">
        <%= link_to "Cancel", employee_reimbursement_path(@employee_reimbursement), class: "px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors duration-200" %>
        <%= form.submit "Update Reimbursement", class: "px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors duration-200" %>
      </div>
    <% end %>
  </div>
</main>

<script>
  // Employee ID update functionality
  function updateEmployeeId(selectElement) {
    const selectedOption = selectElement.options[selectElement.selectedIndex];
    const userId = selectedOption.value;
    const employeeIdDisplay = document.getElementById('employee-id-display');
    const hiddenField = document.querySelector('input[name="employee_reimbursement[employee_id]"]');
    
    if (userId) {
      // Find the user data from the options
      const userData = <%= @users.map { |u| { full_name: u.full_name, id: u.id } }.to_json.html_safe %>;
      const selectedUser = userData.find(user => user.full_name === userId);
      
      if (selectedUser) {
        const formattedId = selectedUser.id.toString().rjust(5, '0');
        employeeIdDisplay.textContent = formattedId;
        hiddenField.value = selectedUser.id;
      }
    } else {
      employeeIdDisplay.textContent = "Select employee first";
      hiddenField.value = "";
    }
  }

  // File preview functionality
  document.addEventListener('DOMContentLoaded', function() {
    const receiptInput = document.querySelector('input[name="employee_reimbursement[receipts][]"]');
    const proofInput = document.querySelector('input[name="employee_reimbursement[proof_of_payment][]"]');
    const itineraryInput = document.querySelector('input[name="employee_reimbursement[travel_itinerary][]"]');
    
    const receiptPreview = document.getElementById('receipt-preview');
    const proofPreview = document.getElementById('proof-preview');
    const itineraryPreview = document.getElementById('itinerary-preview');

    if (receiptInput) {
      receiptInput.addEventListener('change', function(e) {
        handleFilePreview(e, receiptPreview);
      });
    }

    if (proofInput) {
      proofInput.addEventListener('change', function(e) {
        handleFilePreview(e, proofPreview);
      });
    }

    if (itineraryInput) {
      itineraryInput.addEventListener('change', function(e) {
        handleFilePreview(e, itineraryPreview);
      });
    }
  });

  function handleFilePreview(event, previewContainer) {
    previewContainer.innerHTML = '';
    
    Array.from(event.target.files).forEach((file, index) => {
      const fileItem = document.createElement('div');
      fileItem.className = 'flex items-center justify-between p-2 bg-gray-50 rounded border';
      
      const fileInfo = document.createElement('div');
      fileInfo.className = 'flex items-center space-x-2';
      
      const fileIcon = document.createElement('div');
      fileIcon.className = 'w-4 h-4 text-gray-500';
      fileIcon.innerHTML = getFileIcon(file.type);
      
      const fileName = document.createElement('span');
      fileName.className = 'text-sm text-gray-700';
      fileName.textContent = file.name;
      
      const fileSize = document.createElement('span');
      fileSize.className = 'text-xs text-gray-500';
      fileSize.textContent = `(${formatFileSize(file.size)})`;
      
      fileInfo.appendChild(fileIcon);
      fileInfo.appendChild(fileName);
      fileInfo.appendChild(fileSize);
      
      fileItem.appendChild(fileInfo);
      previewContainer.appendChild(fileItem);
    });
  }

  function getFileIcon(fileType) {
    if (fileType.includes('pdf')) {
      return '📄';
    } else if (fileType.includes('word') || fileType.includes('document')) {
      return '📝';
    } else if (fileType.includes('image')) {
      return '🖼️';
    } else {
      return '📎';
    }
  }

  function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }

  function deleteReceipt(blobId) {
    if (confirm('Are you sure you want to delete this receipt?')) {
      fetch(`/employee-reimbursements/<%= @employee_reimbursement.id %>/delete-receipt/${blobId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          alert('Error deleting receipt');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error deleting receipt');
      });
    }
  }

  function deleteProof(blobId) {
    if (confirm('Are you sure you want to delete this proof of payment?')) {
      fetch(`/employee-reimbursements/<%= @employee_reimbursement.id %>/delete-proof/${blobId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          alert('Error deleting proof of payment');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error deleting proof of payment');
      });
    }
  }

  function deleteItinerary(blobId) {
    if (confirm('Are you sure you want to delete this travel itinerary?')) {
      fetch(`/employee-reimbursements/<%= @employee_reimbursement.id %>/delete-itinerary/${blobId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          location.reload();
        } else {
          alert('Error deleting travel itinerary');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error deleting travel itinerary');
      });
    }
  }
</script>

